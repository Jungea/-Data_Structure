[course6] 단순 연결리스트 수정

----------------------------------------------------------
단순 연결리스트를 구현하되, 마지막 노드를 가리키는 인스턴스 변수를 두어
맨 앞 삽입, 맨 뒤 삽입이 모두 O(1) 시간에 이루어지도록 하고자 한다.
아래 첨부한 프로그램에서 (1), (2)를 완성하시오.

- 실행 예:
course6: 홍길동
list =
list = 1
list = 2 1
list = 2 1 33
list = 2 1 33 44

list2 = 55

list2 = 55 66

----------------------------------------------------------
목적
- 단순 연결리스트를 수정하여 구현한다.

----------------------------------------------------------
유의사항
- 들여쓰기
- 식별자 이름을 자바 관례에 맞게 적절히 붙일 것
- command-line에서
  > java -jar course1.jar
  로 채점합니다. 철자도 똑같게 이 명령이 제대로 실행되어야 합니다.
- 과제코드와 본인의 이름을 맨 처음 출력

----------------------------------------------------------
제출 
- 실행파일: 과제코드.jar 파일
- 소스코드파일: .java 파일


// MyNewLinkedList 클래스를 테스트하는 클래스
public class MyNewLinkedListTest {
 public static void main(String[] args) {
  System.out.println("course6: 홍길동");
  MyNewLinkedList list=new MyNewLinkedList();
  
  System.out.println("list = " + list); // 출력:
  list.addFirst(1);
  System.out.println("list = " + list); // 출력: 1
  list.addFirst(2);
  System.out.println("list = " + list); // 출력: 2 1
  list.addLast(33);
  System.out.println("list = " + list); // 출력: 2 1 33
  list.addLast(44);
  System.out.println("list = " + list); // 출력: 2 1 33 44

 

  // ***** 다음 코드 추가하세요. ************
  MyNewLinkedList list2 = new MyNewLinkedList();
  list2.addLast(55);
  System.out.println("list2 = " + list2); // 출력: 55
  list2.addLast(66);
  System.out.println("list2 = " + list2); // 출력: 55 66

 }
}

 

// 선형 리스트를 단순 연결 리스트로 구현한 클래스
// 기존 클래스에 마지막 노드를 가리키는 변수를 추가함
public class MyNewLinkedList {
 private class Node {
  int data;
  Node link;
  Node(int item) {
   data = item;
   link = null;
  }
 }
 
 private Node head = null; // 리스트의 첫번째 노드를 가리킴
 private Node last = null; // 리스트의 마지막 노드를 가리킴
 
 // (1) 첫번째 원소 item을 삽입하는 메소드 - 수행 시간은 O(1) 이어야 함
 public void addFirst(int item) {

 

 

 }
 
 // (2) 마지막 원소 item을 삽입하는 메소드 - 수행 시간은 O(1) 이어야 함
 public void addLast(int item) {

 

 

 }
 
 @Override
 public String toString() {
  String result = "";
  Node tmp = head;
  while(tmp != null) {
   result += tmp.data + " ";
   tmp = tmp.link;
  }
  return result;
 }
}