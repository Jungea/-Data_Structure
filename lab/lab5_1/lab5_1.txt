[lab5_1] ArrayList 사용

----------------------------------------------------------
java.util 패키지의 ArrayList 클래스를 사용하는 프로그램을 다음과 같이 작성하시오.

** ArrayList 클래스는 작성하지 않고, import 하여 이용할 것

(1) Integer를 타입 매개변수로 하여 ArrayList 객체를 생성(list라고 하자)
(2) 사용자에게 다음과 같은 메뉴를 반복하여 제공하되 7 입력시 반복 종료
   1:인덱스조회 2: 전체조회 3:길이조회 4:삽입 5:인덱스삽입 6:인덱스삭제 7:종료

1 선택시, 사용자로부터 인덱스를 입력받아 list에서 값을 조회하여 출력(get 호출)
2 선택시, list의 전체 내용을 출력(toString 호출)
3 선택시, list의 길이를 출력(size 호출)
4 선택시, 사용자로부터 정수값을 입력받아 list에 삽입(add 호출)
5 선택시, 사용자로부터 인덱스와 정수값을 입력받아 list에 삽입(add 호출) ** 주의: 반드시 인덱스, 정수값 순서로 입력받을 것
6 선택시, 사용자로부터 인덱스를 입력받아 list에서 값을 삭제하여 출력(remove 호출)

----------------------------------------------------------
목적
- 순차자료구조 구현에 앞서 ArrayList 연산을 이해한다.

----------------------------------------------------------
유의사항
- 적절한 comment
//***************************
// 파일명: ... .java
// 작성자: ...
// 작성일: ...
// 설명:...
//***************************

- 들여쓰기
- 식별자 이름을 자바 관례에 맞게 적절히 붙일 것
- command-line에서 java -jar 과제코드.jar 로 채점합니다. 철자도 똑같게 이 명령이 제대로 실행되어야 합니다.
- 과제코드와 본인의 이름을 맨 처음 출력

----------------------------------------------------------
제출 
- 과제코드.jar 파일
- .java 파일


import java.util.Scanner;

public class ArrayListTest {
 public static void main(String[] args) {
  System.out.println("lab5_1: 홍길동");

  Scanner input = new Scanner(System.in);

  // (1) Integer를 타입 매개변수로 하여 ArrayList 객체를 생성(list라는 이름의 변수에 저장)
  
         ; // 완성하세요.

  // (2) 사용자에게 메뉴를 반복 제공하고 7을 입력하면 반복 종료
  int menu = 0;
  int index = 0;
  int element = 0;
  do {
   System.out.print(" 1:인덱스조회 2:전체조회 3:길이조회 4:삽입 5:인덱스삽입 6:인덱스삭제 7:종료 ---> ");
   menu = input.nextInt();

   switch(menu) {
   case 1:
    System.out.println("인덱스 위치의 원소값을 조회합니다.");
    System.out.print("인덱스 입력: ");
    index = input.nextInt();
    element = list.      ; // 완성하세요.
    System.out.println(element);  
    break;
   case 2:
    System.out.println("리스트 전체를 조회합니다.");
    System.out.println(                      );   // 완성하세요.
    break;
   case 3:
    System.out.println("리스트 길이를 조회합니다.");
    int size = list.   ;  // 완성하세요.
    System.out.println(size);
    break;
   case 4:
    System.out.println("원소를 리스트의 맨 뒤에 삽입합니다.");
    System.out.print("정수값 입력: ");
    element = input.nextInt();    
    list.                                  ;  // 완성하세요.
    break;
   case 5:
    System.out.println("인덱스 위치에 원소를 삽입합니다.");
    System.out.print("인덱스 입력: ");
    index = input.nextInt();    
    System.out.print("정수값 입력: ");
    element = input.nextInt();    
    list.                                    ;    // 완성하세요.
    break;
   case 6:
    System.out.println("인덱스 위치의 원소를 삭제합니다.");
    System.out.print("인덱스 입력: ");
    index = input.nextInt(); 
    element = list.    ;  // 완성하세요.
    System.out.println(element);
    break;
   case 7:
    System.out.println("종료합니다.");   
    break;
   default:
    System.out.println("메뉴 선택 오류: 다시 선택하세요.");
   }
  } while(menu != 7);
 }
}