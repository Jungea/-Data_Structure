[hw10_1] 인접행렬 구현 방향그래프의 DFS

----------------------------------------------------------
directed graph를 표현하는 추상자료형인 DirectedMatrixGraph 클래스를 정의하고 이를 이용하는 프로그램을 작성하시오.

- DirectedMatrixGraph 클래스 **** lab10_1에 depthFirstSearch 기능과 필요한 인스턴스 변수를 추가

adjacency matrix로 방향 그래프를 구현하는 클래스임

private 인스턴스 변수:
   구현에 필요한 변수들을 선언

public 메소드:
   생성자 : 정점수 n을 매개변수로 받아 정점은 n개이고 간선은 없는 초기 그래프를 생성
            이 때, 정점수 n의 크기를 제한하면 안됨(예를 들어 n이 100 이하만 작동하게 하면 안됨)
   hasEdge : 간선을 이루는 두개의 정점 v1, v2를 매개변수로 받아 이 간선 존재 여부를 리턴
   addEdge : 간선을 이루는 두개의 정점 v1, v2를 매개변수로 받아 그래프에 간선을 추가
 ** 잘못된 정점 번호인 경우 삽입하지 않고 오류 메시지 출력
        ** 이미 존재하는 간선인 경우(hasEdge 호출) 삽입하지 않고 오류 메시지 출력    
   printAdjacentVertices : 정점을 매개변수로 받아 그 정점에 인접한 정점들을 모두 출력
 잘못된 정점 번호인 경우 오류 메시지 출력

   depthFirstSearch : 시작 정점 v를 매개변수로 받아 v를 시작으로 dfs를 호출하는 메소드
          (전체 그래프를 탐색하는 것이 아니라 v와 연결된 부분만 탐색)
       (1) 잘못된 정점 번호인 경우 오류 메시지 출력
       (2) visited 배열 초기화
       (3) dfs 메소드 호출
private 메소드:
   dfs : 시작 정점 v를 매개변수로 받아 v를 시작으로 깊이우선탐색하며 순서대로 정점 번호를 출력하는 재귀 메소드
 

- DirectedMatrixGraphTest 클래스의 main 메소드는 다음을 수행한다.

(1) 사용자로부터 정점 수 n를 입력받아 다음과 같은 방향 그래프 G=(V, E)를 생성
    V = {0, 1, 2, ..., n-1}
    E = {}

(2) 사용자로부터 간선 수 e를 입력받음

(3) 사용자로부터 e개의 정점 쌍(v1, v2)를 입력받아 그래프에 삽입
    간선 삽입 오류 발생은 무시하면 됨. 예를 들어 7개의 간선 삽입 과정에서 2개가 오류이면 5개만 삽입하면 됨

(4) 각 정점에 인접한 정점들을 출력

(5) 각 정점을 시작정점으로 한 깊이우선탐색 결과를 출력 **** lab10_1에 추가할 부분
    주의: 모든 정점을 한번씩 방문하는 것이 목적이 아님. 깊이우선탐색을 n번 할 것(아래 반복문 참고)

for(int i = 0; i < n; i++)

    graph.depthFirstSearch(i);

----------------------------------------------------------
목적
- adjacency matrix로 구현한 directed graph의 깊이우선탐색을 이해한다.

----------------------------------------------------------
유의사항
- 적절한 comment
//***************************
// 파일명: ... .java
// 작성자: ...
// 작성일: ...
// 프로그램 설명:...
//***************************

- 들여쓰기
- 식별자 이름을 자바 관례에 맞게 적절히 붙일 것
- command-line에서 java -jar 과제코드.jar 로 채점합니다.
철자도 똑같게 이 명령이 제대로 실행되어야 합니다.
- 과제명과 본인의 이름을 맨 처음 출력

----------------------------------------------------------
제출 
- 과제코드.jar 파일
- .java 파일들